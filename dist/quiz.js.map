{
  "version": 3,
  "file": "quiz.js",
  "sourceRoot": "..",
  "sources": [
    "src/quiz.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#Initializes questions text\ninit_question = ->\n    document.getElementById(\"question-text\").innerHTML = questions[qn].question #Sets question text\n    document.getElementById(\"question-number\").innerHTML = \"Question \" + (qn + 1) + \" of \" + (questions.length) # Sets question number\n    #Disables middle 3 buttons and renames remaining buttons to yes and no if yesno is true\n    if questions[qn].yesno is true\n        document.getElementById(\"stragree-button\").innerHTML = \"Yes\"\n        document.getElementById(\"strdisag-button\").innerHTML = \"No\"\n        document.getElementById(\"agree-button\").style.display = \"none\"\n        document.getElementById(\"neutral-button\").style.display = \"none\"\n        document.getElementById(\"disag-button\").style.display = \"none\"\n    else\n        document.getElementById(\"stragree-button\").innerHTML = \"Strongly Agree\"\n        document.getElementById(\"strdisag-button\").innerHTML = \"Strongly Disagree\"\n        document.getElementById(\"agree-button\").style.display = \"block\"\n        document.getElementById(\"neutral-button\").style.display = \"block\"\n        document.getElementById(\"disag-button\").style.display = \"block\"\n\n\n#Jumps to next question when option button clicked or to results if no questions are left\nnext_question = (mult) ->\n    spos += mult*questions[qn].effect.spos\n    alle += mult*questions[qn].effect.alle\n    expr += mult*questions[qn].effect.expr\n    pers += mult*questions[qn].effect.pers\n    horn += mult*questions[qn].effect.horn\n    fame += mult*questions[qn].effect.fame\n    shwr += mult*questions[qn].effect.shwr\n    sani += mult*questions[qn].effect.sani\n    rela += mult*questions[qn].effect.rela\n    fedp += mult*questions[qn].effect.fedp\n    actn += mult*questions[qn].effect.actn\n    purp += mult*questions[qn].effect.purp\n    perc += mult*questions[qn].effect.perc\n    cmdy += mult*questions[qn].effect.cmdy\n    qn++\n    answers.push mult\n    if qn < questions.length\n        do init_question\n    else\n        do results\n\n#Rewinds to previous question when back button clicked (if previous answer exists)\nprev_question = ->\n    if answers.length is 0\n        do window.history.back\n    else\n        qn--\n        prev_answer = answers[..].pop()\n        spos -= prev_answer * questions[qn].effect.spos\n        alle -= prev_answer * questions[qn].effect.alle\n        expr -= prev_answer * questions[qn].effect.expr\n        pers -= prev_answer * questions[qn].effect.pers\n        horn -= prev_answer * questions[qn].effect.horn\n        fame -= prev_answer * questions[qn].effect.fame\n        shwr -= prev_answer * questions[qn].effect.shwr\n        sani -= prev_answer * questions[qn].effect.sani\n        rela -= prev_answer * questions[qn].effect.rela\n        fedp -= prev_answer * questions[qn].effect.fedp\n        actn -= prev_answer * questions[qn].effect.actn\n        purp -= prev_answer * questions[qn].effect.purp\n        perc -= prev_answer * questions[qn].effect.perc\n        cmdy -= prev_answer * questions[qn].effect.cmdy\n        do answers.pop\n        do init_question\n\n#Calculates the score by diving the obtained values by the maxiumum for each axis\ncalc_score = (score,max) ->\n    if max is 0\n        return \"50.0\"\n    else\n        return (100*(max+score)/(2*max)).toFixed(1)\n\n#Jumps to results page with the correct percentage scores for each axis\nresults = ->\n    window.location.href = \"results.html\" \\\n        + \"?a=\" + calc_score(spos,max_spos) \\\n        + \"&b=\" + calc_score(alle,max_alle) \\\n        + \"&c=\" + calc_score(expr,max_expr) \\\n        + \"&d=\" + calc_score(pers,max_pers) \\\n        + \"&e=\" + calc_score(horn,max_horn) \\\n        + \"&f=\" + calc_score(fame,max_fame) \\\n        + \"&g=\" + calc_score(shwr,max_shwr) \\\n        + \"&h=\" + calc_score(sani,max_sani) \\\n        + \"&i=\" + calc_score(rela,max_rela) \\\n        + \"&j=\" + calc_score(fedp,max_fedp) \\\n        + \"&k=\" + calc_score(actn,max_actn) \\\n        + \"&l=\" + calc_score(purp,max_purp) \\\n        + \"&m=\" + calc_score(perc,max_perc) \\\n        + \"&n=\" + calc_score(cmdy,max_cmdy) \\\n        + \"&z=\" + length\n\n#Defines each variable as 0\nmax_spos = max_alle = max_expr = max_pers = max_horn = max_fame = max_shwr = max_sani = max_rela = max_fedp = max_actn = max_purp = max_perc = max_cmdy =\\\nspos = alle = expr = pers = horn = fame = shwr = sani = rela = fedp = actn = purp = perc = cmdy = qn = 0\n#Defines arrrays as empty\nanswers = []\nshortquestions = []\nquestions = []\n#Fetches short questions if url substring is s\nif window.location.search.substring(1) is \"s\"\n    for question in fullquestions\n        if question.short is true\n            shortquestions.push(question)\n    questions = shortquestions;\n    length = \"s\";\nelse\n    questions = fullquestions;\n    length = \"f\";\n\n#Calculates max score for each axis\nfor question in questions\n    max_spos += Math.abs(question.effect.spos)\n    max_alle += Math.abs(question.effect.alle)\n    max_expr += Math.abs(question.effect.expr)\n    max_pers += Math.abs(question.effect.pers)\n    max_horn += Math.abs(question.effect.horn)\n    max_fame += Math.abs(question.effect.fame)\n    max_shwr += Math.abs(question.effect.shwr)\n    max_sani += Math.abs(question.effect.sani)\n    max_rela += Math.abs(question.effect.rela)\n    max_fedp += Math.abs(question.effect.fedp)\n    max_actn += Math.abs(question.effect.actn)\n    max_purp += Math.abs(question.effect.purp)\n    max_perc += Math.abs(question.effect.perc)\n    max_cmdy += Math.abs(question.effect.cmdy)\n#starts the question initializer\ndo init_question\n"
  ]
}